<UserControl x:Class="Laboratory.UI.Views.Patients"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:local="clr-namespace:Laboratory.UI.Views"
             mc:Ignorable="d" 
             d:DesignHeight="1000" d:DesignWidth="1800"  >
    <UserControl.Resources>
        <ImageBrush x:Key="tb_mouse_over"
                    ImageSource="../Assets/tgBtn_default.png"/>
        <ImageBrush x:Key="tb_mouse_click"
                    ImageSource="../Assets/closeMenu.png"/>

        <Style x:Key="GBStyled" TargetType="GroupBox">
            <!-- These 2 setters make the GroupBox less blurry -->
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="UseLayoutRounding" Value="True"/>
            <!-- Default Background colour -->
            <Setter Property="Background" Value="White"/>
            <!-- Template of GroupBox -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GroupBox">
                        <Grid>
                            <Grid.Resources>
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0" CornerRadius="5,5,0,0" BorderThickness="1" BorderBrush="#24426E" Background="#24426E">
                                <!-- FontSize of the header is changed via the Templates "Tag" property -->
                                <Label Foreground="White" FontSize="14" HorizontalAlignment="Center" FontWeight="Bold">
                                    <!-- DropShadow makes the label standout from the background -->
                                    <Label.Effect>
                                        <DropShadowEffect ShadowDepth="0" BlurRadius="3" />
                                    </Label.Effect>
                                    <ContentPresenter Margin="0" ContentSource="Header" RecognizesAccessKey="True"/>
                                </Label>
                            </Border>
                            <Border Grid.Row="1" CornerRadius="0,0,5,5" BorderThickness="1,0,1,1" BorderBrush="#24426E" Background="{TemplateBinding Background}">
                                <ContentPresenter Margin="0" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="TextBoxBaseControlTemplate" TargetType="{x:Type TextBox}">
            <Border Background="White" 
                x:Name="Bd" BorderBrush="Transparent"
                BorderThickness="2" CornerRadius="10">
            </Border>
        </ControlTemplate>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="280" />
            <RowDefinition Height="500*" />
            <RowDefinition Height="150*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="450" />
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="450"/>
        </Grid.ColumnDefinitions>
        <GroupBox Grid.RowSpan="2" Grid.ColumnSpan="3" Grid.Row="0" Style="{StaticResource GBStyled}"  x:Name="patientGroupBox" BorderThickness="0" materialDesign:ColorZoneAssist.Mode="Custom" Background="#fcfcfc" materialDesign:ColorZoneAssist.Background="#24426E" materialDesign:ColorZoneAssist.Foreground="White"  Header="New Patient" HorizontalAlignment="Stretch" VerticalAlignment="Top"  Margin="480,100,480,0" Height="250"  >
            <Border CornerRadius="0,0,5,5" Background="#f2f2f2" BorderBrush="Transparent" BorderThickness="0" Height="60" Margin="0,160,0,0" >
                <StackPanel  Background="#f2f2f2" Width="758" Height="60"  />
            </Border>
        </GroupBox>
        <Grid Grid.Row="0" Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <ComboBox x:Name="comboTitle" Grid.Row="0" Grid.Column="0" SelectedValue="{Binding TitleId}" HorizontalAlignment="Stretch"  DisplayMemberPath="Name" materialDesign:HintAssist.Hint="Title" Margin="60,135,20,0"  VerticalAlignment="Top" Height="43"   Style="{StaticResource MaterialDesignFloatingHintComboBox}">
                <ComboBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel />
                    </ItemsPanelTemplate>
                </ComboBox.ItemsPanel>
            </ComboBox>
            <TextBox Grid.Row="0" Grid.Column="0" x:Name="txtName" Style="{StaticResource MaterialDesignFloatingHintTextBox}" VerticalAlignment="Top"  Margin="60,185,20,0"  materialDesign:HintAssist.Hint="Name" TextWrapping="Wrap"  HorizontalAlignment="Stretch"  Height="43"></TextBox>
            <TextBox Grid.Row="0" Grid.Column="0" x:Name="txtLastName"  Style="{StaticResource MaterialDesignFloatingHintTextBox}"  materialDesign:HintAssist.Hint="Last Name" TextWrapping="Wrap" VerticalAlignment="Top"  HorizontalAlignment="Stretch" Margin="60,235,20,0" Height="43"></TextBox>
            <TextBox Grid.Row="0" Grid.Column="1" x:Name="txtFatherName"  Style="{StaticResource MaterialDesignFloatingHintTextBox}"  materialDesign:HintAssist.Hint="Father Name" TextWrapping="Wrap" VerticalAlignment="Top" HorizontalAlignment="Stretch" Margin="40,135,30,0" Height="43"></TextBox>
            <TextBox Grid.Row="0" Grid.Column="1" x:Name="txtMotherName"  Style="{StaticResource MaterialDesignFloatingHintTextBox}"   materialDesign:HintAssist.Hint="Mother Name" TextWrapping="Wrap" VerticalAlignment="Top" HorizontalAlignment="Stretch"  Margin="40,185,30,0" Height="43"></TextBox>
            <TextBox Grid.Row="0" Grid.Column="1" x:Name="txtAge"  Style="{StaticResource MaterialDesignFloatingHintTextBox}"   materialDesign:HintAssist.Hint="Age" TextWrapping="Wrap" VerticalAlignment="Top" HorizontalAlignment="Stretch" Margin="40,235,30,0" Height="43"></TextBox>
            <materialDesign:TimePicker Grid.Row="0" Grid.Column="2" x:Name="arriveTime" materialDesign:HintAssist.Hint="Arrive Time"  HorizontalAlignment="Stretch"  VerticalAlignment="Top" Margin="40,185,30,0" Height="43"/>
            <ComboBox Grid.Row="0" Grid.Column="2" x:Name="comboGender" SelectedValue="{Binding GenderId}" DisplayMemberPath="Name" materialDesign:HintAssist.Hint="Sex" Margin="40,135,30,0" Height="43" VerticalAlignment="Top"   Style="{StaticResource MaterialDesignFloatingHintComboBox}">
                <ComboBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel />
                    </ItemsPanelTemplate>
                </ComboBox.ItemsPanel>
            </ComboBox>
            <TextBox Grid.Row="0" Grid.Column="2" x:Name="txtDoctorName" Style="{StaticResource MaterialDesignFloatingHintTextBox}"  Margin="40,235,30,0" materialDesign:HintAssist.Hint="Dr Name" TextWrapping="Wrap" VerticalAlignment="Top" HorizontalAlignment="Stretch"  Height="43"></TextBox>
            <TextBox Grid.Row="0" Grid.Column="3" x:Name="txtRoomNr" Style="{StaticResource MaterialDesignFloatingHintTextBox}"  Margin="20,135,50,0" materialDesign:HintAssist.Hint="Room Nr" TextWrapping="Wrap" VerticalAlignment="Top" HorizontalAlignment="Stretch"  Height="43"></TextBox>
            <TextBox Grid.Row="0" Grid.Column="3" x:Name="txtPhoneNr" Style="{StaticResource MaterialDesignFloatingHintTextBox}"  Margin="20,185,50,0" materialDesign:HintAssist.Hint="Phone Nr" TextWrapping="Wrap" VerticalAlignment="Top" HorizontalAlignment="Stretch"  Height="43"></TextBox>
            <TextBox Grid.Row="0" Grid.Column="3" x:Name="txtDiagnosis" Style="{StaticResource MaterialDesignFloatingHintTextBox}"  Margin="20,235,50,0" materialDesign:HintAssist.Hint="The Diagnosis" TextWrapping="Wrap" VerticalAlignment="Top" HorizontalAlignment="Stretch"  Height="43"></TextBox>
        </Grid>
        



        <Grid Grid.RowSpan="2" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="266*"/>
                <RowDefinition Height="151*"/>
            </Grid.RowDefinitions>
            <DataGrid  Grid.Row="0"  x:Name="patientsGrid" SelectionChanged="patientsGrid_SelectionChanged" SelectedItem="{Binding SelectedItem}" IsReadOnly="True" VerticalAlignment="Top" 
                  Height="730" Margin="100,100,50,0" CanUserAddRows="False" SelectionUnit="FullRow" SelectionMode="Extended" Grid.RowSpan="2" >

                <DataGrid.Resources>
                    <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Background" Value="#24426E" />
                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="BorderThickness" Value="0" />
                    </Style>

                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTextColumn  Header="Nr" Binding="{Binding Nr}"     Width="50" >

                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Left" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn  Header="Patients" Binding="{Binding FullName}"     Width="*">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Left" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>

                    </DataGridTextColumn>
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button x:Name="deletBtn" Click="Confirm_Dialog" Background="Transparent" Foreground="#3d070c" BorderThickness="0" Width="20" Height="20"  Padding="0">
                                    <materialDesign:PackIcon  Kind="AccountRemoveOutline" Height="20" Width="20" />
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>

            </DataGrid>
        </Grid>
        <Grid Grid.RowSpan="2" Grid.Column="2">
            <DataGrid  x:Name="testsGrid" MouseDoubleClick="add_Test_To_Patient" ItemsSource="{Binding Items2}" IsReadOnly="True" VerticalAlignment="Top"  Height="730" Margin="50,100,100,0" CanUserAddRows="False" SelectionUnit="FullRow" SelectionMode="Extended"  >
                <DataGrid.Resources>
                    <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Background" Value="#24426E" />
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                    </Style>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTextColumn  Header="Code" Binding="{Binding Code}" Width="63"    />
                    <DataGridTextColumn  Header="Test" Binding="{Binding AppearName}" Width="*"    >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
        <Grid Grid.Row="1" Grid.Column="1">
            <DataGrid CellEditEnding="userTestsGrid_CellEditEnding"  x:Name="userTestsGrid" SelectedItem="{Binding SelectedItem}" ItemsSource="{Binding patientTest}" AutoGenerateColumns="False" VerticalAlignment="Top" Height="450" Margin="0,100,0,0" CanUserAddRows="False" SelectionUnit="FullRow" SelectionMode="Extended"  >
                <DataGrid.Resources>
                    <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Background" Value="#24426E" />
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                    </Style>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTextColumn  Header="Code" Binding="{Binding Code}" IsReadOnly="True" Width="*"    >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn  Header="Name" Binding="{Binding Name}" IsReadOnly="True" Width="*"    >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn  Header="Category" Binding="{Binding CategoryName}" IsReadOnly="True" Width="135"    >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn  Header="Range" Binding="{Binding Range}" IsReadOnly="True" Width="*"    >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn  Header="Result" Binding="{Binding Result}"  IsReadOnly="False" Width="*"    >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn  Header="Price" Binding="{Binding Price}" IsReadOnly="True" Width="*"    >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn  Header="Note" Binding="{Binding Note}" IsReadOnly="True" Width="*"    >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
        <Button x:Name="btnNew" Grid.Row="1" Grid.Column="1"  Content="New" Width="100" Click="New_Patient" Background="#61637A" ToolTip="Resource name: MaterialDesignRaisedLightDarkButton" Margin="200,20,0,0" VerticalAlignment="Top" >
            <Button.Triggers>
                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#48495c" Duration="0:0:0.3" Storyboard.TargetName="btnNew"  Storyboard.TargetProperty="Background.Color" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#61637A" Storyboard.TargetName="btnNew"  Duration="0:0:0.3"  Storyboard.TargetProperty="Background.Color" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Button.Triggers>
        </Button>
        <Button x:Name="addPatient" Click="Add_Or_Update_Patient" Width="100" Background="#090D40" Margin="450,20,0,0" Grid.Row="1" Grid.Column="1"  VerticalAlignment="Top" ToolTip="Resource name: MaterialDesignRaisedLightDarkButton" Content="Add" >
            <Button.Style>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedDarkButton}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SelectedItems.Count,ElementName=comboTitle}" Value="0">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Text.Length, ElementName=txtName, UpdateSourceTrigger=PropertyChanged}" Value="0">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Text.Length, ElementName=txtLastName, UpdateSourceTrigger=PropertyChanged}" Value="0">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Text.Length, ElementName=txtFatherName, UpdateSourceTrigger=PropertyChanged}" Value="0">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Text.Length, ElementName=txtMotherName, UpdateSourceTrigger=PropertyChanged}" Value="0">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Text.Length, ElementName=txtAge, UpdateSourceTrigger=PropertyChanged}" Value="0">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding SelectedItems.Count,ElementName=comboGender}" Value="0">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Text.Length, ElementName=txtDoctorName, UpdateSourceTrigger=PropertyChanged}" Value="0">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Text.Length, ElementName=txtPhoneNr, UpdateSourceTrigger=PropertyChanged}" Value="0">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
            <Button.Triggers>
                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#010424" Duration="0:0:0.3" Storyboard.TargetName="addPatient"  Storyboard.TargetProperty="Background.Color" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#090D40" Storyboard.TargetName="addPatient"  Duration="0:0:0.3"  Storyboard.TargetProperty="Background.Color" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Button.Triggers>
        </Button>
        <Button Grid.Row="2" Grid.Column="1" VerticalAlignment="Top" Content="Preview" Height="50" Width="100" Margin="0,20,500,80" Click="print"></Button>
        <DockPanel VerticalAlignment="Bottom" Grid.ColumnSpan="3" Grid.Row="2" Margin="0" >
            <Grid  DockPanel.Dock="Bottom" Background="#010221" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Row="0" Foreground="White" FontSize="15" Margin="30,10,140,10">Total:</Label>
                    <TextBox TextAlignment="Center" Grid.Column="0" x:Name="txtTotal"  VerticalAlignment="Top"  Margin="90,10,20,10" Text="0" Background="White" materialDesign:HintAssist.Hint="Total" TextWrapping="Wrap"  HorizontalAlignment="Stretch"  Height="30">
                        <TextBox.Resources>
                            <Style TargetType="{x:Type TextBox}" >
                                <Style.Resources>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="CornerRadius" Value="5" />
                                    </Style>
                                </Style.Resources>
                            </Style>
                        </TextBox.Resources>
                    </TextBox>
                    <Label Grid.Column="1" Foreground="White" FontSize="15" Margin="0,10,140,10">Discount:</Label>
                    <TextBox TextAlignment="Center"  Grid.Column="1" x:Name="txtDiscount" VerticalAlignment="Top"   Margin="90,10,20,10"  Background="White" materialDesign:HintAssist.Hint="Discount" TextWrapping="Wrap"  HorizontalAlignment="Stretch"  Height="30">
                        <TextBox.Resources>
                            <Style TargetType="{x:Type TextBox}" >
                                <Style.Resources>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="CornerRadius" Value="5" />
                                    </Style>
                                </Style.Resources>
                            </Style>
                        </TextBox.Resources>
                    </TextBox>
                    <Label Grid.Column="2" Foreground="White" FontSize="15" Margin="10,10,160,10">Paid:</Label>
                    <TextBox TextAlignment="Center"  Grid.Column="2" x:Name="txtPaid"  VerticalAlignment="Top"   Margin="70,10,40,10"  Background="White" materialDesign:HintAssist.Hint="Paid" TextWrapping="Wrap"  HorizontalAlignment="Stretch"  Height="30">
                        <TextBox.Resources>
                            <Style TargetType="{x:Type TextBox}" >
                                <Style.Resources>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="CornerRadius" Value="5" />
                                    </Style>
                                </Style.Resources>
                            </Style>
                        </TextBox.Resources>
                    </TextBox>
                    <Label Grid.Column="3" Foreground="White" FontSize="15" Margin="0,10,150,10">Remain:</Label>
                    <TextBox TextAlignment="Center"  Grid.Column="3" x:Name="txtRemain" VerticalAlignment="Top"   Margin="80,10,30,10"  Background="White" materialDesign:HintAssist.Hint="Remain" TextWrapping="Wrap"  HorizontalAlignment="Stretch"  Height="30">
                        <TextBox.Resources>
                            <Style TargetType="{x:Type TextBox}" >
                                <Style.Resources>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="CornerRadius" Value="5" />
                                    </Style>
                                </Style.Resources>
                            </Style>
                        </TextBox.Resources>
                    </TextBox>
                </Grid>
            </Grid>
        </DockPanel>
    </Grid>

</UserControl>
